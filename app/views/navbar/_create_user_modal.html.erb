<style type="text/css">

#create-user {
	width:480px;
	margin-left:-200px;
}
#login-user{
	width:400px;
	margin-left:-200px;
}
.modal-body {
	max-height: 300px;
}
#create-user-errors {
	height: 20px;
	font-size: 11px;
	text-align: center;
}
#create-user-success {
	height: 20px;
	font-size: 11px;
	text-align: center;
}
#login-user-errors {
	height: 20px;
	font-size: 11px;
	text-align: center;
}
#login-user-success {
	height: 20px;
	font-size: 11px;
	text-align: center;
}
.spacer5 { height: 5px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer10 { height: 10px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer15 { height: 15px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer20 { height: 20px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer25 { height: 25px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer30 { height: 30px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer35 { height: 35px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer40 { height: 40px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer45 { height: 45px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer50 { height: 50px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer100 { height: 100px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
.spacer200 { height: 200px; width: 100%; font-size: 0; margin: 0; padding: 0; border: 0; display: block; }
</style>
<body>

<!-- Create a User -->
<div class="modal hide fade" id="create-user" >
	<div class="modal-header">
		<a class="close" data-dismiss="modal">&times;</a>
		<h3>Create an Account</h3>
	</div>
	<div class="modal-body">
		<form class="form-horizontal" id='create-user-form'>
			<legend>Personal Information</legend>
			<div class="row-fluid">
				<div class="span4"><label for="create-first">First Name</label></div>
				<div class="span8"><input id="create-first"  type="text" name="first" class="create-text"></div>
			</div>

			<div class="row-fluid">
				<div class="span4"><label for="create-last">Last Name</label></div>
				<div class="span8"><input id="create-last" type="text" name="last" class='create-text'></div>
			</div>

			<div class="row-fluid">
				<div class="span4"><label for="create-email">Email</label></div>
				<div class="span8"><input id="create-email" type="text" name="email" class='create-text'></div>
			</div>

			<div class="row-fluid">
				<div class="span4"><label for="create-password">Password</label></div>
				<div class="span8"><input id="create-password" type="password" name="password" class='create-text'></div>
			</div>

			<div class="row-fluid">
				<div class="span4"><label for="create-password_confirmation">Confirm Password</label></div>
				<div class="span8"><input id="create-password_confirmation" type="password" name="password_confirmation" class='create-text'></div>
			</div>

			<div class="row-fluid"><div class="spacer25"></div></div> <!-- morespace -->
				
			<div class="row-fluid">
				<div class="span6"><label for="create-dob">Date of Birth</label></div>
				<label><input type="radio" name="create-gender" checked="checked" value="male">Male</label>
			</div>
			<div class="row-fluid">
				<div class="span6"><input id="create-dob" placeholder="mm/dd/yyyy" type="text" name="create-dob" style="width:100px"></div>
				<label><input type="radio" name="create-gender" value="female">Female</label>
			</div>

			<legend>Residence</legend>
			<div class="control-group">
				<label class="control-label" for="create-residence-address">Address</label>
				<div class="controls">
					<input type="text" class="input-large" id="create-residence-address">
				</div>
			</div> <!-- address -->

			<div class="control-group">
				<label class="control-label" for="create-residence-city">City</label>
				<div class="controls">
					<input type="text" class="input-medium" id="create-residence-city">
				</div>
			</div> <!-- city -->

			<div class="control-group">
				<label class="control-label" for="create-residence-zip">Zipcode</label>
				<div class="controls">
					<input type="text" class="input-small" id="create-residence-zip">
				</div>
			</div> <!-- zip -->

		</form> <!-- Residence form -->
	</div>

	<div class="modal-footer">
		<a role="button" class="btn" data-toggle="modal" data-dismiss="modal">Cancel</a>
		<a role="button" class="btn" data-toggle="modal" data-dismiss="modal" href="#create-contacts" >Next</a>
	</div>
</div>


<div class="modal hide fade" id="create-contacts">
	<div class="modal-header">
		<a class="close" data-dismiss="modal">&times;</a>
		<h3>Contact Information</h3>
	</div>
	<div class="modal-body">
		<form class="form-horizontal">
				<legend>First Contact</legend>
				<div class="control-group">
					<label class="control-label" for="create-contacts-first-name">Name </label>
					<div class="controls">
						<input type="text" class="input-large" id="create-contacts-first-name">
					</div>
				</div> <!-- contact one name -->

				<div class="control-group">
					<label class="control-label" for="create-contacts-first-primary">Primary Contact</label>
					<div class="controls">
						<input type="text" class="input-medium bfh-phone" data-country="US" id="create-contacts-first-primary">
					</div>
				</div> <!-- contact one primary -->

				<div class="control-group">
					<label class="control-label" for="create-contacts-first-secondary">Secondary Contact</label>
					<div class="controls">
						<input type="text" class="input-medium bfh-phone" data-country="US" id="create-contacts-first-secondary">
					</div>
				</div> <!-- contact one secondary -->

				<legend>Second Contact</legend>
				<!-- Secondary Contact Modal -->
				<div class="control-group">
					<label class="control-label" for="create-contacts-second-name">Name </label>
					<div class="controls">
						<input type="text" class="input-large" id="create-contacts-second-name">
					</div>
				</div> <!-- contact two name -->

				<div class="control-group">
					<label class="control-label" for="create-contacts-second-primary">Primary Contact</label>
					<div class="controls">
						<input type="text" class="input-medium bfh-phone" data-country="US" id="create-contacts-second-primary">
					</div>
				</div> <!-- contact two primary -->

				<div class="control-group">
					<label class="control-label" for="create-contacts-second-secondary">Secondary Contact</label>
					<div class="controls">
						<input type="text" class="input-medium bfh-phone" data-country="US" id="create-contacts-second-secondary">
					</div>
				</div> <!-- contact two secondary -->
		</form> <!-- contact one form -->
	</div>
	<div class="modal-footer">
		<a role="button" class="btn" data-toggle="modal" data-dismiss="modal" href="#create-user">Back</a>
		<a role="button" class="btn" data-toggle="modal" data-dismiss="modal" href="#other" >Next</a>
	</div>
</div>

<!-- Miscalaneous -->
<div class="modal hide fade" id="other">
	<div class="modal-header">
		<a class="close" data-dismiss="modal">&times;</a>
		<h3>Experience and Needs</h3>
	</div>
	<div class="modal-body">
			<form>
				<legend><h5>Skill Level</h5></legend>
				<label><input type="radio" name="create-skill" value="beginner" checked="checked">beginner</label>
				<label><input type="radio" name="create-skill" value="beginning strokes">beginning strokes</label>
				<label><input type="radio" name="create-skill" value="intermediate">intermediate</label>
				<label><input type="radio" name="create-skill" value="advanced">advanced</label>
				
				<br />
				<legend><h5>Additional Information</h5></legend>
				<textarea id="create-extra" class="field span6"  name="create-extra" rows="4"></textarea>
		</form>

	</div>
	<div class="modal-footer">
		<div class="alert alert-error" id="create-user-errors">
			<a class="close" data-dismiss="alert">&times;</a>
			<p>
				<i class="icon-exclamation-sign">  </i><span id="create-user-err-message"></span>
			</p>
		</div>
		<div class="alert alert-success" id="create-user-success">
			<a class="close" data-dismiss="alert">&times;</a>
			<i class="icon-ok"></i> You successfully created an Account.
		</div>
		<a role="button" class="btn" data-toggle="modal" data-dismiss="modal" href="#create-contacts">Back</a>
		<a role="button" class="btn btn-primary" data-toggle="modal" data-dismiss="modal" id="create-user-button">Create Account</a>
	</div>
</div>







</body>
<script type="text/javascript">
/////////////////////////////////////////////////////////////////////////////////////
/////////////////////// Jquery events and clicks ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
	// $(document).ready(function() {
	// 	$("#create-user-button").click(sendCreateUserRequest);
	// 	$("#create-user-errors").hide();
	// 	$("#create-user-success").hide();
	// });
	// // function handletest(data) {
	// // 	$('body').append(data.errCode);
	// // 	var sections = data.sections;
	// // 	for(i=0; i<sections.length; i++) { 
	// // 		var inputSection = sections[i];
	// // 		for (var key in inputSection) {
	// // 			$('body').append(inputSection[key]); + " ";
	// // 		}
	// // 	}
	// // }
	// function submitGetRequest(url, handler) {
	// 	return $.getJSON(url, handler);
	// }


	// /////////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////////// Create User Functions ///////////////////////
	// /////////////////////////////////////////////////////////////////////////////////
	// function sendCreateUserRequest() {
	// 	$("#create-user-err-message").empty();
	// 	var inputUser = new User();

	// 	post_json_request("/Users/add", inputUser.collectInput("create"), handleCreateUserResponse);
	// 	return false;
	// }

	// function handleCreateUserResponse(data) {
	// 	var error_message =  translateErrCode(data.errCode);
	// 	$("#create-user-errors").fadeOut(300);
	// 	$("#create-user-err-message").html(error_message);
		
	// 	if(data.errCode!=1) {
	// 		 $("#create-user-errors").show();
	// 		 return data.errCode;
	// 	}
	// 	else {
	// 		$("#create-user-success").fadeIn(300);
	// 		setTimeout( function(){window.location.replace("/");}, 1600);
	// 		return 1;
	// 	}
	// }
	//  ////////////////////////////////////////////////////////////////////////////////////
	//  //////////////////////////////////// Helper functions //////////////////////////////
	//  ////////////////////////////////////////////////////////////////////////////////////

	// function getRadioValue(attribute) {
	// 	var radioId = "input[name=" + attribute + "]:radio:checked";
	// 	return $(radioId).val();
	// }

	// function collectInput(action, obj) {
	// 	for(var key in obj) { obj[key] = getFormInput(action, key); }
	// 	return obj;
	// }

	// function getFormInput(action, key) {
	// 	var identifier = "#" + action + "-" + key;
	// 	return $(identifier).val();
	// }


	// ////////////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////////// User Object ////////////////////////////////////
	// ////////////////////////////////////////////////////////////////////////////////////
	// var User = function(first, last, email, password, password_confirmation, dob, additional_info) {
	// 	this.first = (first === undefined) ? "" : first;
	// 	this.last = (last === undefined) ? "" : last;
	// 	this.email = (email === undefined) ? "" : email;
	// 	this.dob = (dob === undefined) ? "" : dob;
	// 	this.password = (password === undefined) ? "" : password;
	// 	this.password_confirmation = (password_confirmation === undefined) ? "" : password_confirmation;
	// 	this.additional_info = (additional_info === undefined) ? "" : additional_info;
	// };

	// User.prototype.collectInput = function(action) {
	// 	// handle simple input texts 
	// 	for(var key in this) {
	// 		var identifier = "#" + action + "-" + key;
	// 		this[key] = $(identifier).val();
	// 	}
	// 	var residence = new Residence();
	// 	var contacts = new Contacts(); //abstact away objects for possible future error checking

	// 	this.residence = residence.collectInput(action); //use objects functions to grab values
	// 	this.contacts = contacts.collectInput(action);

	// 	this.gender = parseInt(getRadioValue("gender"),10); //handle radios seperate
	// 	this.skill = parseInt(getRadioValue("skill"),10); //str->int w/ radix=10

	// 	return this;
	// }


	// ///////////////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////////// Residence Object //////////////////////////////////
	// ///////////////////////////////////////////////////////////////////////////////////////
	// var Residence = function(address, city, zip) {
	// 	this.address = (address === undefined) ? "" : address;
	// 	this.city = (city === undefined) ? "" : city;
	// 	this.zip = (zip === undefined) ? "" : zip;
	// };

	// Residence.prototype.collectInput = function(action) {
	// 	for(var key in this) { 
	// 		var identifier = "#" + action + "-residence-" + key;
	// 		this[key] = $(identifier).val();
	// 	}
	// 	return this;
	// }
	// ///////////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////// Contacts Objects //////////////////////////////////
	// ///////////////////////////////////////////////////////////////////////////////////
	// var Contacts = function(first, second) {
	// 	this.first = (first === undefined) ? new Contact() : first;
	// 	this.second = (second === undefined) ? new Contact() : second;
	// };

	// Contacts.prototype.collectInput = function(action) {
	// 	for(var key in this) {
	// 		var tempContact = new Contact();
	// 		var identifier =  "#" + action + "-" + key + "-"; //create-second-contact-secondary
	// 		this[key] = tempContact.collectInput(identifier); //use contacts jquery to retrieve specific id's
	// 	}
	// 	return this;
	// }

	// //////////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////// Contact Objects //////////////////////////////////
	// //////////////////////////////////////////////////////////////////////////////////
	// var Contact = function(name, primary, secondary) {
	// 	this.name = (name === undefined) ? "" : name;
	// 	this.primary = (primary === undefined) ? "" : primary;
	// 	this.secondary = (secondary === undefined) ? "" : secondary;
	// };
	// Contact.prototype.collectInput = function(first_or_second) {
	// 	for(var key in this) { 
	// 		var identifier =  first_or_second + "contact-" + key;
	// 		this[key] = $(identifier).val();
	// 	}
	// 	return this;
	// }

</script>
