
<head>
		<meta charset="utf-8">
		<title>Rancho Rinconada Online Booking </title>
		
		<link type="text/css" rel="stylesheet" href="assets/homepage.css.scss">
		
		

		<!-- // <script src="http://twitter.github.com/bootstrap/assets/js/bootstrap-dropdown.js"></script> -->
		<!-- // <script src="/twitter-bootstrap/twitter-bootstrap-v2/js/bootstrap-modal.js"></script>  -->
		<script type='text/javascript' src='/assets/jquery-1.9.1.js'></script>
		<script type="text/javascript" src="/assets/jquery-1.9.1.min.js"></script>
		<!-- // <script type="text/javascript" src="/assets/jquery-ui.min.js"></script> -->

		
		<!-- <script src='assets/jquery/jquery-ui-1.10.2.custom.min.js'></script> -->


		<script src='assets/fullcalendar/fullcalendar.min.js'></script>

		<link type="text/css" rel="stylesheet" href='/assets/fullcalendar/fullcalendar.css' rel='stylesheet' />
		<link type="text/css" rel="stylesheet" href='/assets/fullcalendar/fullcalendar.print.css' rel='stylesheet' media='print'></link>

</head>

<%= render 'navbar/new_navbar' %>

<div class="row-fluid">

	<div class="span3">
		<div id="FilterSelection" class="alert alert-info">
	  		<h5>Hide Only: </h5>
	  		Select the Section Types You Are<br> 
	  		Not Interested In ...<br><br>
	  			
	  		<form class="form">
	  			
				<label class="checkbox">
				  	<input type="checkbox" id="show-A"> Type A
				</label>

				<label class="checkbox">
					<input type="checkbox" id="show-B"> Type B
				</label>

				<label class="checkbox">
					 <input type="checkbox" id="show-C"> Type C
				</label>
			</form>
		</div>

		<div class="alert alert-info">
		  <h5>To Make a Reservation:</h5>
		  Step One:<br> Select a Day and a Section Type<br>
		  from the Calendar by Clicking<br> 
		  Over the Rounded-edged Squares. <br><br>

		  Step Two:<br> Select the Time and a Lesson<br> Type
		  in the Pop-up Window by<br> Clicking
		  over the Rounded-edge Squares.<br><br>

		  Empty Days and Times Cannot<br> 
		  be Reserved.<br> 

		</div>
	</div>


	<div class="span9">
		<div id="DateSelection" class="alert alert-info">
  			<h3 id="Month">Select a Day and Section Type: </h3>
  			<h3 id="Day">Select the Time and Lesson Type: </h3><br>
  			<div id="calendar"></div><br>
		</div>
	</div>
</div>

<%= render 'navbar/update_user_password' %>
<%# render 'users/update_user_contacts' %>
<%= render "navbar/create_user_modal_v2" %>
<%= render 'navbar/update_user_modal' %>
<%= render 'navbar/navbar_bottom' %>
<script type="text/javascript">



var events = [1000];
var index = 0;
var usercalendar;
var idToSend;
var danielSwitch;



function json_request(page, dict, success, failure) {
    $.ajax({
        type: 'POST',
        url: page,
        data: JSON.stringify(dict),
        contentType: "application/json",
        dataType: "json",
        success: success,
        failure: failure
    });
}


function extractSections(data){

	for (var counter = 0, dictLen = data.length; counter < dictLen; counter++) {

		var lesson_type = data[counter]['lesson_type']; 
    	var title = 'Section-C Available';
    	var id = data[counter]['id'];
		var start = (data[counter]['start_date']).split("T")[0] + "T" + (data[counter]['start_time']).split("T")[1];

		var dayInfo = new Date((data[counter]['start_date']).split("T")[0] + "T" + (data[counter]['start_time']).split("T")[1]);
		
		dayInfo.setHours(parseInt((data[counter]['start_time']).split("T")[1]));
		dayInfo.setMinutes(parseInt((data[counter]['start_time']).split(":")[1]));


		var end = (data[counter]['end_date']).split("T")[0]+ "T" + (data[counter]['end_time']).split("T")[1];
		var className = 'Section-C';
		var backgroundColor = 'red';


    	if (data[counter]['section_type'] =='A') {
    		title = 'Section-A Available';
    		backgroundColor = 'blue';
    		className = 'Section-A';
    		end = (data[counter]['start_date']).split("T")[0]+ "T" + (data[counter]['end_time']).split("T")[1];

    	} else if (data[counter]['section_type']=='B') {
    		title = 'Section-B Available';
    		className = 'Section-B';
    		backgroundColor = 'orange';

    	} 

    	var newSection = {'title':title, 'id':id, 'start':start, 'end':end, 'allDay':false,
    	'lesson_type':lesson_type,'dayInfo':dayInfo, 'className': className, 'backgroundColor':backgroundColor};

    	
    	events[index] = newSection;
    	index = index + 1;
    	
    	$(UserCalendar.identifier).fullCalendar( 'refetchEvents' );
		$(UserCalendar.identifier).fullCalendar( 'rerenderEvents' );

	}

	return true;

}


var UserCalendar = function(input_events) {
	//Instance Variable and Methods (ie input events dependant)
	this.events = input_events;

	this.calendarOptions = 	{
		header: UserCalendar.headerOptions,
		editable: false,
		events: input_events,
		eventClick: UserCalendar.clickEvent,
		//dayClick: UserCalendar.clickDay,
		viewDisplay: UserCalendar.disp,
		
	};

	this.display = function() {
		$(UserCalendar.identifier).fullCalendar(this.calendarOptions);
	}
}

// Singleton Class per Page Static Methods
UserCalendar.identifier = "#calendar";

UserCalendar.headerOptions = {
	left: 'prev,next today',
	center: 'title',
	right: 'month prev,next',
};

UserCalendar.disp = function (view ) {
	if($(UserCalendar.identifier).fullCalendar('getView').name == "month"){

		$('#Month').show()
		$('#Day').hide()
	}
}

UserCalendar.clickEvent = function(calEvent, jsEvent, view) {
	if(view.name=='agendaDay') {

		$('#ulisesModal').show(); 
		$('#modal-section').empty(); 
		$('#modal-section').append(calEvent.className);
		$('#modal-date').empty(); 
		$('#modal-date').append(calEvent.dayInfo);
		$('#modal-lesson').empty(); 
		$('#modal-lesson').append(calEvent.lesson_type);
		
		if (document.cookie.indexOf('user_id') != -1){
			$('#ulisesModal-Guest').hide();
			$('#ulisesModal-Account').hide();
			$('#ulisesModal-Reserve').show();
			$('#ulisesModal-Sing').hide();
		} else{
			$('#ulisesModal-Guest').show();
			$('#ulisesModal-Account').show();
			$('#ulisesModal-Sing').show();
			$('#ulisesModal-Reserve').hide();
		
		}

		idToSend = calEvent.id;


		return true;
	}

	$('#ulisesModal-Cancel').click(function() {
   		$('#ulisesModal').hide(); 
	});

	$('#closeUlises-modal').click(function() {
   		$('#ulisesModal').hide(); 
	});

	$('#ulisesModal-Reserve').click(function() {
		
		json_request("/Registrations/register", {'section_id':idToSend}, function(data) 
   		{ return alert(data.errCode);}, function(err) { alert('error occurred on request'); });
   		$('#ulisesModal').hide(); 
	});

	$('#ulisesModal-Sing').click(function (){
		$('font17px#err_message').empty();
		$('#ulisesModal').hide();
	});

	$('#ulisesModal-Guest').click(function (){
		$('#ulisesModal').hide();
		danielSwitch = "Guest";
	});

	$('#ulisesModal-Account').click(function (){
		$('#ulisesModal').hide();
		danielSwitch = "Account";
	});
	
	if($(UserCalendar.identifier).fullCalendar('getView').name == "month"){
		
		$(UserCalendar.identifier).fullCalendar('changeView', 'agendaDay');
		$(UserCalendar.identifier).fullCalendar('gotoDate',calEvent.dayInfo);
		$('#Month').hide()
		$('#Day').show()
	}
	return false;
}

$(document).ready(function() {
	init_user_calendar();
	resetTypeBoxes();
  	$("#create-user-button").click(sendCreateUserRequest);
	$('#sm-update-user-button').click(sendUpdateUserRequest);
  	init_password_update()
	$("#create-user-errors").hide();
	$("#create-user-success").hide();
	getBarState();
});

function init_user_calendar() {
	var date = new Date();
	var d = date.getDate();
	var m = date.getMonth();
	var y = date.getFullYear();


	json_request("/Sections/getAvailableSectionsFromNowOn", {}, function(data) 
   	{ return extractSections(data['sections']); }, function(err) { alert('error occurred on request'); });


	usercalendar = new UserCalendar(events);
	usercalendar.display();
	$('#ulisesModal').hide();  

}

function getBarState() {
	$.getJSON('/Users/profile', init_user_home)
}

function init_user_home(data) {
	$('#SignDropDown').hide();
  	$('#CreateAccountButton').hide();
	$('#WelcomeDropDown').hide();
	$('#login-email').val("");
	$('#login-password').val("");
	handleProfileResponse(data);


  	var isValidData = data === undefined || data === null;
  	var isValid = data.errCode === undefined || data.errCode === null;

	if(!isValidData && !isValid && data.errCode==1 && document.cookie.indexOf('user_id') != -1) {
	  	$('#WelcomeDropDown').show();
	}
	else {
		$('#SignDropDown').show();
		$('#CreateAccountButton').show();
	}
  return false;
}


function submitGetRequest(url, handler) {
	return $.getJSON(url, handler);
}

	function handle_login_response(data) {
		$('font17px#err_message').empty();
		$('font17px#err_message').css('font-size','12px');
		$('font17px#err_message').css('color','red');
		$('font17px#err_message').append(getErrorMessage(data));
	}

	function getErrorMessage(data) {
	  switch (data.errCode){

	    case 108:
	    	return "Invalid Username and/or Password";
	      break;

	    //This is the case for success
	    default:
	    	if (data.type != "Admin") {
	    		$('#SignDropDown').hide();
				$('#CreateAccountButton').hide();
				$('#WelcomeDropDown').show();
	    	} 
	    	else {
	    		window.location.href = "/admin";
	    	}   
	  }
	}

	$('#login-button').click(function() {
	   email = $('#login-email').val()
	   password = $('#login-password').val()
	   json_request("/Users/login", { email: email, password: password }, function(data) 
	   	{ return handle_login_response(data); }, function(err) { alert('error occurred on request'); });

	   return false;
	});

	$('#login-button2').click(function() {
	   email = $('#inputEmail').val()
	   password = $('#inputPassword').val()
	   json_request("/Users/login", { email: email, password: password }, function(data) 
	   	{ return handle_login_response(data); }, function(err) { alert('error occurred on request'); });

	   return false;
	});

	$("#sm-logout-button").click( function() {
	json_request("/Users/logout", {}, function(data) { return init_user_home(data); }, function(err) { alert("error occurred on request"); });
		return false;
	});				

    $("#show-A").click( function() {
		$('.Section-A').toggle();
	});

	$("#show-B").click( function() {
		$('.Section-B').toggle();
	});

	$("#show-C").click( function() {
		$('.Section-C').toggle();
	});

	$('#CreateAccountButton').click(function (){
		danielSwitch = "Main";
	});

	$('#SignDropDown').click(function (){
		$('font17px#err_message').empty();
	});


    function resetTypeBoxes() {
       $("#show-A").prop('checked' , false)
       $("#show-B").prop('checked' , false)
       $("#show-C").prop('checked' , false)
    }


</script>